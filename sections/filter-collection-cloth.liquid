{% comment %} <div class="uk-container"></div>
<div class="uk-flex uk-padding-small uk-padding-remove-left button-fc-menu" uk-margin style="">

        {% for collection in collections %}
              {% unless collection.handle == 'frontpage' %} 
                  {% capture collection_title %}{{ collection.title | escape }}{% endcapture %} 
<!--                      <a  class="button-fc uk-button" href="{{ collection.url }}"> All &rsaquo;</a> -->
              {% endunless %} 
        {% endfor %}
        {% for collection in collections %}
          <a class="button-fc uk-button uk-padding-remove" style="margin-right:10px;" href="{{ collection.url }}"> {{ collection.title }} </a>
        {% endfor %}
          
<!--       <a class="button-fc uk-button" href="#"> Women </a>
      <a class="button-fc uk-button" href="#"> Mens </a>
      <a class="button-fc uk-button" href="#"> Col1 </a>
      <a class="button-fc uk-button" href="#"> Col2 </a> -->

</div>

{% schema %}
  {
    "name": "Section name",
    "settings": []
  }
{% endschema %}

{% stylesheet %}
  .button-fc{
   background:transparent; 
  }
  .button-fc:hover{
    background: #F3F3F3 0% 0% no-repeat padding-box;

    color: #8BB73F;
  }
@media only screen and (max-width: 600px) {
  button-fc-menu {
    padding-left:4.94444vw:
  }
}
{% endstylesheet %}

{% javascript %}
  let products = {
  
};

for (let i of products.data) {
  //Create Card
  let card = document.createElement("div");
  //Card should have category and should stay hidden initially
  card.classList.add("card", i.category, "hide");
  //image div
  let imgContainer = document.createElement("div");
  imgContainer.classList.add("image-container");
  //img tag
  let image = document.createElement("img");
  image.setAttribute("src", i.image);
  imgContainer.appendChild(image);
  card.appendChild(imgContainer);
  //container
  let container = document.createElement("div");
  container.classList.add("container");
  //product name
  let name = document.createElement("h5");
  name.classList.add("product-name");
  name.innerText = i.productName.toUpperCase();
  container.appendChild(name);
  //price
  let price = document.createElement("h6");
  price.innerText = "$" + i.price;
  container.appendChild(price);

  card.appendChild(container);
  document.getElementById("products").appendChild(card);
}

//parameter passed from button (Parameter same as category)
function filterProduct(value) {
  //Button class code
  let buttons = document.querySelectorAll(".button-value");
  buttons.forEach((button) => {
    //check if value equals innerText
    if (value.toUpperCase() == button.innerText.toUpperCase()) {
      button.classList.add("active");
    } else {
      button.classList.remove("active");
    }
  });

  //select all cards
  let elements = document.querySelectorAll(".card");
  //loop through all cards
  elements.forEach((element) => {
    //display all cards on 'all' button click
    if (value == "all") {
      element.classList.remove("hide");
    } else {
      //Check if element contains category class
      if (element.classList.contains(value)) {
        //display element based on category
        element.classList.remove("hide");
      } else {
        //hide other elements
        element.classList.add("hide");
      }
    }
  });
}

//Search button click
document.getElementById("search").addEventListener("click", () => {
  //initializations
  let searchInput = document.getElementById("search-input").value;
  let elements = document.querySelectorAll(".product-name");
  let cards = document.querySelectorAll(".card");

  //loop through all elements
  elements.forEach((element, index) => {
    //check if text includes the search value
    if (element.innerText.includes(searchInput.toUpperCase())) {
      //display matching card
      cards[index].classList.remove("hide");
    } else {
      //hide others
      cards[index].classList.add("hide");
    }
  });
});

//Initially display all products
window.onload = () => {
  filterProduct("all");
};
{% endjavascript %} {% endcomment %}